Copy from school::::

change list:
-//# define F_WILDCARD 5
-       flags->numchar = 0;             //some unknowns at number.c
- Binary %b removed
-  oct_zero -> octal precision
- base == 8 && precision ehto
- flags->field_width, flags->width
-  flags->field_width turha?
- stdio and F_WILDCARD from printf.h
- get_base: base = 1; -> muute jaetaa nollal





TOdo

- number_double_and_float added 2 MONTHS AGO, Check it ---_>>>>>
- flags->numchar in number.c
- Libft makefile to the jiiri
- Makefile to the jiiri - (makefile 3 error(s))
- number_as_char mallocci 
- itoa_base_fill







from: void	print_pointer_address(t_printf *flags)

  //if (flags->flag & (1 << F_ZERO))
	//	flags->width -= 2;
	//printf("%d, %d, %d\n", flags->num_length, flags->width, flags->precision);
	//if (flags->num_length > flags->width - 3)
	//	flags->padding = flags->width - 3 - flags->num_length;

write_padding_flags:

/*
	Täält ft_strdup pois, koska void* new ei aina lopu '\0'
		-> segfault strdupis
*/


/*printf("padding: %d, prec: %d, wdth: %d, numlen: %d\n", 
		flags->padding, flags->precision, flags->width, flags->num_length);
*/




Oikee printf seg faulttaa myös?!?!??!

((- 0 precision ("0.0%d,2 0); ei skulaa))

  1 #include <stdio.h>
  2 
  3 int main()
  4 {
  5         printf("%s", -2);
  6         return (0);
  7 }

  $Joels-MacBook-Air:beginner_C luukurkkuun$		gcc printf_segfault.c
  $printf_segfault.c:5:15: warning: format specifies type 'char *' but the argument has type 'int' [-Wformat]
  $      printf("%s", -2);
  $              ~~   ^~
  $              %d
  $1 warning generated.
  $Joels-MacBook-Air:beginner_C luukurkkuun$		./a.out
  $	Segmentation fault: 11
  $Joels-MacBook-Air:beginner_C luukurkkuun$

- ...


****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
